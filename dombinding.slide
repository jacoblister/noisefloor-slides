VDOM: Write your own DOM bindings in Golang
16 May 2019
Tags: gopherjs, wasm

Jacob Lister
#Senior Software Developer, Regen
jacob.h.lister@gmail.com
https://github.com/jacoblister/noisefloor

* Project Noisefloor
.image images/lca2019-jacob2.png

* Project Noisefloor Background
- Replacement for old C/C++ sampler/looper
.image images/carbon.png

* Project Noisefloor Aims
- Social Project - share on the web
- Learn new languages/technologies (Golang with javascript target)
- Unconstrained by time/deadlines

* Audio DSP playground - like Reactor, Max/MSP
.image images/reaktor.jpg

* Why Golang
Well placed in the languge stack - high level enough, but down to the metal
where performance matters

- Javascript (transpilers exist, Gopherjs is excelent)
- *Golang* (native build on target platforms Linux, Windows)
- C/C++ (transpilers exist)
- Web assembly (Golang can compile to this)
- Assember

* User interface dilemma
- Project (check)
- Implementation Language (check, Golang)
- Pilot implemenation (check, minimum viable synth)

Needs

- Builds for Windows, Linux, web targets, need a common UI for all of them
- Web browser based HTML/SVG seems the most logical

Questions

- No UI on some platforms? (no, need everything to run everywhere)
- Classic Client/Server app? (no, too high maintenance)
- Low level graphics (SDL/HTML Canvas)? (no, too much implementation work)

* Golang Web UI toolkits
There is a lot of activity in this space

- https://github.com/murlokswarm/app
- https://github.com/asticode/go-astilectron
- https://github.com/sciter-sdk/go-sciter
- https://github.com/dtylman/gowd
- https://github.com/zserge/webview (Embeddable web view)
- https://github.com/oktadeveloper/okta-go-vue-example

- https://github.com/bep/gr (React bindings)
- https://github.com/myitcv/x/blob/master/react (React binings)
- https://github.com/rocketlaunchr/react (React bindings)
- https://github.com/gopherjs/vecty (React like framework)

* Dom Streaming, Basic Design
  .                                                                                                .
  .                         +--------+                     +---------+                             .
  .                         |        |  -- Dom Patches ->  |         |                             .
  .                         | Server |                     | Browser |                             .
  .                         |(Golang)|  <-- UI Events ---  |         |                             .
  .                         +--------+                     +---------+                             .
  .                                        (Websocket)                                             .

* Demo - Todo example
- Javascript
- Webassembly
- Native

* Demo - keyboard example
- Server initated DOM updates

* Limitations
- Limited event handling (no propagation, event bubbling)
- Could be quite slow (websocket)

* Questions?
?
